# .github/workflows/main.yml
name: CI/CD Catalog-App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Integration:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Create env file
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PGADMIN_EMAIL: ${{ secrets.PGADMIN_EMAIL }}
          PGADMIN_PASSWORD: ${{ secrets.PGADMIN_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          BACKEND_CORS_ORIGINS: ${{ secrets.BACKEND_CORS_ORIGINS }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          BASE_URL: ${{ secrets.BASE_URL }}
        run: |
          touch .env
          echo DATABASE_URL="$DATABASE_URL" >> .env"
          echo PGADMIN_EMAIL="$PGADMIN_EMAIL" >> .env"
          echo PGADMIN_PASSWORD="$PGADMIN_PASSWORD" >> .env"
          echo SECRET_KEY="$SECRET_KEY" >> .env"
          echo ALGORITHM="$ALGORITHM" >> .env"
          echo TOKEN_URL="$TOKEN_URL" >> .env"
          echo AWS_ACCESS_KEY="$AWS_ACCESS_KEY" >> .env"
          echo AWS_SECRET="$AWS_SECRET" >> .env"
          echo AWS_BUCKET="$AWS_BUCKET" >> .env"
          echo AWS_REGION="$AWS_REGION" >> .env"
          echo BACKEND_CORS_ORIGINS="$BACKEND_CORS_ORIGINS" >> .env"
          echo CELERY_BROKER_URL="$CELERY_BROKER_URL" >> .env"
          echo CELERY_RESULT_BACKEND="$CELERY_RESULT_BACKEND" >> .env"
          echo MAIL_USERNAME="$MAIL_USERNAME" >> .env"
          echo MAIL_PASSWORD="$MAIL_PASSWORD" >> .env"
          echo MAIL_FROM="$MAIL_FROM" >> .env"
          echo MAIL_PORT="$MAIL_PORT" >> .env"
          echo MAIL_SERVER="$MAIL_SERVER" >> .env"
          echo MAIL_FROM_NAME="$MAIL_FROM_NAME" >> .env"
          echo BASE_URL="$BASE_URL" >> .env"
          ls -a
          cat .env
        shell: bash
      - name: Start containers
        run: docker-compose up -d

  Deployment:
    needs: Integration
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          cat private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            #Now we have got the access of EC2 and we will start the deploy .
            cd /home/ubuntu/catalog-app/ &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            docker-compose -f docker-compose.prod.yml up -d --build 
          '